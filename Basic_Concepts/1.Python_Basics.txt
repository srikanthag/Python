"Python"
a. Python is programming language.

b. Powerful object-oriented programming language: Python supports object-oriented language and concepts of classes and objects come into existence. It supports inheritance, polymorphism, and encapsulation, etc. The object-oriented procedure helps to programmer to write reusable code and develop applications in less code.

" Without creating an Object ""
class python:
     def designer():
         print("Guido van Rossum")
python.designer()

" With creating an Object ""
class python:
     def designer():
         print("Guido van Rossum")
p = python
p.designer()


c. Support dynamic memory allocation: In Python, we don't need to specify the data-type of the variable. When we assign some value to the variable, it automatically allocates the memory to the variable at run time.
  Suppose we are assigned integer value 15 to x, then we don't need to write int x = 15. Just write x = 15.

d. Python is an interpreted language: it means the Python program is executed one line at a time.

e. Cross-platform Language: Python can run equally on different platforms such as Windows, Linux, UNIX, and Macintosh, etc.
   So, we can say that Python is a portable language.

f. Large Standard Library: It provides a vast range of libraries for the various fields such as machine learning, web developer,
   and also for the scripting.
   There are various machine learning libraries, such as Tensor flow, Pandas, Numpy, Keras, and Pytorch, etc.
   Django, flask, pyramids are the popular framework for Python web development.

=======================================================================================================

""" Python Compilation """
Compilation âˆ’ The source code in python is saved as a . py file which is then compiled into a format known as byte code,
byte code is then converted to machine code. After the compilation, the code is stored in . pyc files and is regenerated when the
source is updated.

=======================================================================================================

" Identifier"
User defined name to represent a variable, functions, class, modules ect.

Rules:
a. Name can start "_" or "alphabet".
b. Can be alphanumeric but not start with number.
c. No special character except "_".
d. Keywords cannot be identifier.
e. Max char is 79

Note: To check weather python identifier is valid or not >>> "string".isidentifier

======================================================================================================

" Keywords "

Special words which having special meaning.
Cant assign any value to the keyword.

Note: To get all keywords
a. help("keyword")
b. import keyword
    print(keyword.kwlist)

['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']

======================================================================================================

" Python Variable "
Variable is a name that is used to refer to memory location. Python variable is also known as an identifier and used to hold value.

a=10
x=a
print(id(x))

"id" returns the memory location of an object

=====================================================================================================

" Memory allocation in variables "

There are two parts of memory (RAM)
a. Stack memory (Organized memory)
b. Heap memory (Unorganized memory)

In this method references are stored in Stack and values are stored in Heap.

Eg:
* When a=10, 10 is created in heap and its reference is assigned to variable 'a'.
* x = a here will crete another reference variable if object already exist with same value.
* If we change the value of a (a=15) then link b/w 'a' and 10 disconnected. But 'x' still refer to 10.
* If we assign another value to 'x' (x=20). It is also disconnect link b/w 'x' and 10
* Now 10 does not have any reference link. The garbage collector automatically delete the object from heap memory.

=====================================================================================================

" Print "
Standard function used to print the output.

Parameter
a. end
print(value end"string")
default value:\n

b. sep
print(value, sep="string")

=====================================================================================================

" Input "
The input() function takes input from the user and returns it.
name = input("Enter your name: ")
print(name)

# Output:
# Enter your name: James
# James
======================================================================================================

Python dir() Function
The dir() function returns all properties and methods of the specified object, without the values. This function will return all
the properties and methods, even built-in properties which are default for all object.

a = 'srikantn'
print(dir(a[3]))
print(dir(a))

======================================================================================================

Python ord(), chr() functions
* Python ord() function takes string argument of a single Unicode character and return its integer Unicode code point value (Ascii value).

x = ord('A')
print(x)

* Python chr() function takes integer argument and return the string representing a character at that code point.

y = chr(65)
print(y)
print(chr(123))
print(chr(36))

======================================================================================================
"Hashable object"
* These objects which implements __hash__ magic method.
* Only immutable have hash value. It is used to check mutable or immutable.
* All immutable are hashable but all hashable are not immutable.

 Eg.
 a = 'sr'
print(dir(a))       # Output have __hash__ method

=====================================================================================================

Mutable and Immutable data types

** Mutable datatypes: It will allow modification on the original object
List, set, dict
** Immutable data type: Does not allow modification. even if the modification is done there will be created new object.
string, tuple, int, float

=====================================================================================================

Sequences and Iterable
* An iterable is anything you can loop over with a for loop in Python. Iterables can be looped over, and anything that can be looped over is an iterable.
   Sets, dictionaries, files, and generators are all iterables but none of these things are sequences.

* Sequences are iterables that have a specific set of features. They can be indexed starting from 0 and ending at one less than the length of the sequence, they have a length, and they can be sliced.
  Lists, tuples, strings

========================================================================================================
"Default values"
Int: 0/Int()
Float: 0.0/float()
Bool: False/bool()
Complex: 0j/0+0j/complex()
String: ' '/str
List: []/list()
Tuple: ()/tuple()
Set: set()
Dictionary: {}/dit()

=========================================================================================================

Data types

Datatypes are represent the type of data ths is store in memory location.
Variable can hold the value and every value has a data type.

type: returns the type of data
d = "srikanth"
print(type(d))

dir(): returns the list of attributes.
d = "srikanth"
print(dir(d))

Different types of datatypes
Text Type:	str
Numeric Types:	int, float, complex
Sequence Types:	list, tuple, range
Mapping Type:	dict
Set Types:	set, frozenset
Boolean Type:	bool
Binary Types:	bytes, bytearray, memoryview
None Type:	NoneType