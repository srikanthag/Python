* String is a set  or collection of characters. (" ", ' ', '" "')
* It is an immutable datatype

s =100
d = str(s)
print(type(d))


** Raw string:
* String prefixed with "r" or "R"
* Raw string do not treat backslash as a part of an escape sequence.

E.g.
In regular string consider backslash as special character
s = "hello \world \gu"
print(s)

In raw string consider entire string as character.
s = r"hello \world \gu"
print(s)


** Indexing
* Process of extracting single character is called indexing.
* It can start with positive or negative.
s = 'sri'
print(s.index('r'))


** Slicing
* Process of extracting multiple character.

Eg.
s = "hello world"
print(s[-3])
print(s[2])
print(s[0:7:2])
print(s[len(s):0:-2])
print(s[len(s)::-1])


** Note
String is immutable, Because once memory allocated to the string we can never modify original memory using any methods.
When string inbuilt method is applied an any string the original string giving to the output of new string.

s = "hello world"
b = s.upper()
print(b)
print(id(s))   ## 2590597596080
print(id(b))  ## 2590597595952


Python String Methods

1. count(): Returns the number of times a specified value occurs in a string
s= 'sriikanth'
print(s.count('i'))

2. endswith():	Returns true if the string ends with the specified value
s= 'sriikanth'
print(s.endswith('g')) ### False
print(s.endswith('h')) ### True

3. find(): Searches the string for a specified value and returns the position of where it was found
s= 'sriikanth'
print(s.find('p'))  ## returns -1 (return -1 if character not available)
print(s.find('h'))  ## returns 8

4. index(): Searches the string for a specified value and returns the position of where it was found
s= 'sriikanth'
print(s.index('z'))  ## returns value error
print(s.index('h'))  ## returns 6

5. isalnum(): Returns True if all characters in the string are alphanumeric
s= 'sriikant456h'
print(s.isalnum())  ## True

6. isalpha(): Returns True if all characters in the string are in the alphabet
s= '123'
print(s.isalpha()) ## True

7. isascii(): Returns True if all characters in the string are ascii characters
print(s.isascii())

8. isdecimal():	Returns True if all characters in the string are decimals
string1 = "12345"
print(string1.isdecimal())  # Output: True

# Example 2: String with non-decimal characters
string2 = "1234a5"
print(string2.isdecimal())  # Output: False

9. isdigit():		Returns True if all characters in the string are digits
s= '123'
print(s.isdigit())

10. isidentifier():	Returns True if the string is an identifier

11. islower(): Returns True if all characters in the string are lower case
string = "sriKanth"
print(string.lower())

12. isnumeric(): Returns True if all characters in the string are numeric
string = "123"
print(string.isnumeric())

13. isspace(): Returns True if all characters in the string are whitespaces
string = " "
print(string.isspace())

14. isupper(): Returns True if all characters in the string are upper case
string = "SRI"
print(string.isupper())

15. join(): Converts the elements of an iterable into a string
string = "hello world"
print('-'.join(string))

16. lower(): Converts a string into lower case
string = "sri"
print(string.lower())

17. lstrip(): The lstrip() method removes leading whitespace or specified characters from the beginning of a string
string1 = "   Hello, World!   "
print(f"Original string: '{string1}'")
print(f"After lstrip(): '{string1.lstrip()}'")  # Removes leading whitespace
# Output: 'Hello, World!

18. replace(): Returns a string where a specified value is replaced with a specified value
s= ' Srikanth'
print(s.replace('r','Z'))

19. rfind(): Searches the string for a specified value and returns the last position of where it was found
string1 = "hello world, hello universe"
index = string1.rfind("hello")
print(index)  # Output: 13 (Index of the last 'hello')

20. rindex(): Searches the string for a specified value and returns the last position of where it was found
string1 = "hello world, hello universe"
index = string1.rindex("hello")
print(index)  # Output: 13 (Index of the last 'hello'

21. rsplit(): Splits the string at the specified separator, and returns a list
string1 = "one two three four"
print(string1.rsplit())  # Splits by whitespace, starting from the right
# Output: ['one', 'two', 'three', 'four']

22. rstrip(): The rstrip() method removes trailing whitespace or specified characters from the end of a string.
string3 = "   Hello, World!   "
print(f"Original string: '{string3}'")
print(f"After rstrip(): '{string3.rstrip()}'")  # Removes trailing whitespace
# Output: '   Hello, World!'

23. split(): Splits the string at the specified separator, and returns a list
s= 'Srikanth is a student'
print(s.split(' '))

24. startswith(): Returns true if the string starts with the specified value
string1 = "Hello, World!"
print(string1.startswith("Hello"))  # Output: True
print(string1.startswith("World"))  # Output: False

25. strip(): Returns a trimmed version of the string
string1 = "   Hello, World!   "
print(f"Original string: '{string1}'")
print(f"After strip(): '{string1.strip()}'")

26. swapcase():	Swaps cases, lower case becomes upper case and vice versa
s= 'Srikanth'
print(s.swapcase())

27. upper(): Converts a string into upper case
string = "sriKanth"
print(string.upper())