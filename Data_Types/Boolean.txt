In Python, the bool data type represents Boolean values, which are used to denote truth values: either True or False. Boolean values are often used in conditional statements and logical operations to control the flow of a program.

# Define Boolean variables
is_sunny = True
is_raining = False

# Use Boolean values in conditional statements
if is_sunny:
    print("It's a sunny day!")
else:
    print("It's not sunny today.")

# Logical operations
and_operation = is_sunny and not is_raining
or_operation = is_sunny or is_raining
not_operation = not is_raining

# Print results
print("And operation (is_sunny and not is_raining):", and_operation)
print("Or operation (is_sunny or is_raining):", or_operation)
print("Not operation (not is_raining):", not_operation)



** Conversion to Boolean
You can convert other data types to Boolean values using the bool() function. The conversion rules are:

Falsy Values: Values that evaluate to False include None, 0, 0.0, empty sequences ('', [], {}), and other empty collections.
Truthy Values: All other values evaluate to True.

print(bool(0))      # False
print(bool(1))      # True
print(bool(""))     # False
print(bool("Hello")) # True
print(bool([]))     # False
print(bool([1, 2])) # True
